/*!
 * A Timer class to easily handle timing in JavaScript (based on AS3 Timer)
 * by Nicolas Vannier
 * http://www.nicolas-vannier.com
 * Date: Tue Jan 29 2013 22:49:49 GMT+0200
 */
 function Timer(delay,repeatCount){if(this==window)throw new Error('Timer Error: Timer is a class constructor. Use the keyword "new" to call it.');var that=this,_repeatCount,_delay,_timer=null,_callbacks={TIMER:[],TIMER_COMPLETE:[]};this.currentCount=0;this.running=false;this.getRepeatCount=function(){return _repeatCount};this.getDelay=function(){return _delay};this.getTimer=function(){return _timer};this.getCallbacks=function(){return _callbacks};this.setRepeatCount=function(value){if(_repeatCount!=
undefined)that.reset();if(value<0)throw new Error('Timer Error: "repeatCount" must be a positive number.');_repeatCount=value};this.setDelay=function(value){if(_delay!=undefined)that.reset();if(value<0)throw new Error('Timer Error: "delay" must be a positive number.');_delay=value};this.setTimer=function(value){_timer=value};this.setRepeatCount(parseInt(repeatCount));this.setDelay(parseInt(delay))}
Timer.prototype.start=function(){var repeatCount;if(this.running||(repeatCount=this.getRepeatCount())!=0&&this.currentCount>=repeatCount)return;this.running=true;var that=this,callbacks=this.getCallbacks().TIMER,trigger=function(){if(!that.running)return;for(var i=0;i<callbacks.length;i++)callbacks[i]();that.currentCount++;if(repeatCount!=0&&that.currentCount>=repeatCount){that.stop();that.complete();return}};this.setTimer(setInterval(trigger,this.getDelay()))};
Timer.prototype.stop=function(){var repeatCount=this.getRepeatCount(),timer=this.getTimer();if(!this.running)return;if(timer!=undefined)clearInterval(timer);this.running=false};Timer.prototype.complete=function(){var callbacks=this.getCallbacks().TIMER_COMPLETE;for(var i=0;i<callbacks.length;i++)callbacks[i]()};Timer.prototype.reset=function(){this.currentCount=0;if(this.running)this.stop()};
Timer.prototype.addEventListener=function(event,callback){if(typeof callback==="function"&&(event===Timer.Event.TIMER||event===Timer.Event.TIMER_COMPLETE)){var callbacks=this.getCallbacks();callbacks[event].push(callback)}};Timer.prototype.removeEventListener=function(event,callback){if(event===Timer.Event.TIMER||event===Timer.Event.TIMER_COMPLETE){var callbacks=this.getCallbacks();for(var i=0;i<callbacks[event].length;i++)if(callbacks[event][i]===callback)callbacks[event].splice(i,1)}};
Timer.Event={TIMER:"TIMER",TIMER_COMPLETE:"TIMER_COMPLETE"};